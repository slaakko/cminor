/*========================================================================
    Copyright (c) 2012-2016 Seppo Laakko
    http://sourceforge.net/projects/cmajor/
 
    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

 ========================================================================*/

[cpp]#include <cpgsyntax/Element.hpp>
[cpp]#include <cpgsyntax/Composite.hpp>
[hpp]#include <../pl/Rule.hpp>

namespace cpg.syntax
{
    grammar RuleGrammar
    {
        using ElementGrammar.Identifier;
        using ElementGrammar.Signature;
        using CompositeGrammar.Alternative;
        using stdlib.string;

        Rule(cminor::parsing::Scope* enclosingScope): cminor::parsing::Rule*
                    ::= RuleHeader(enclosingScope){ value = RuleHeader; } "::=" RuleBody(value)
                    ;

        RuleHeader(cminor::parsing::Scope* enclosingScope): cminor::parsing::Rule*
                    ::= Identifier:name{value = new Rule(name, enclosingScope); value->SetSpan(span); } Signature(value)
                    ;

        RuleBody(cminor::parsing::Rule* rule)
                    ::= (Alternative(rule->GetScope()):definition! ';'!){ rule->SetDefinition(definition); }
                    ;
    }
}
