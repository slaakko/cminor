using System;
using System.Text;

namespace System.Xml
{
    public class XmlProcessingException : Exception
    {
        public XmlProcessingException(string message) : base(message)
        {
        }
    }

    public class XmlContentParser
    {
        public virtual void ParseXmlContent(string xmlContent, string systemId, XmlProcessor processor) {}
    }

    public class XmlExternalEntityParser
    {
        public virtual void ParseExternalXmlEntity(string externalEntityContent, string systemId, XmlProcessor processor) {}
    }

    public class ExternalID
    {
        public ExternalID(string publicLiteral, string systemLiteral)
        {
            this.publicLiteral = publicLiteral;
            this.systemLiteral = systemLiteral;
        }
        public string PublicLiteral
        {
            get { return publicLiteral; }
        }
        public string SystemLiteral
        {
            get { return systemLiteral; }
        }
        private string publicLiteral;
        private string systemLiteral;
    }

    public abstract class ParameterEntityValue
    {
    }

    public class InternalParameterEntity : ParameterEntityValue
    {
        public InternalParameterEntity(string entityValue)
        {
            this.entityValue = entityValue;
        }
        public string Value
        {
            get { return entityValue; }
        }
        private string entityValue;
    }

    public class ExternalParameterEntity : ParameterEntityValue
    {
        public ExternalParameterEntity(ExternalID externalID)
        {
            this.externalID = externalID;
        }
        public ExternalID ExtID
        {
            get { return externalID; }
        }
        private ExternalID externalID;
    }

    public abstract class EntityValue
    {
    }

    public class InternalEntity : EntityValue
    {
        public InternalEntity(string entityValue)
        {
            this.entityValue = entityValue;
        }
        public string Value
        {
            get { return entityValue; }
        }
        private string entityValue;
    }

    public class ExternalEntity : EntityValue
    {
        public ExternalEntity(ExternalID externalID, string notation)
        {
            this.externalID = externalID;
            this.notation = notation;
        }
        public ExternalID ExtID
        {
            get { return externalID; }
        }
        public string Notation
        {
            get { return notation; }
        }
        private ExternalID externalID;
        private string notation;
    }

    public class ElementContentSpec
    {
    }

    public class XmlProcessor
    {
        public virtual void SetContent(string content) {}
        public virtual void SetContentHandler(XmlContentHandler contentHandler) {}
        public virtual void SetContentParser(XmlContentParser contentParser) {}
        public virtual void SetExternalEntityParser(XmlExternalEntityParser externalEntityParser) {}
        public virtual void StartDocument() {}
        public virtual void EndDocument() {}
        public virtual void Version(string xmlVersion) {}
        public virtual void Encoding(string encodingName) {}
        public virtual void BeginStartTag(string tagName) {}
        public virtual void BeginAttributeValue(StringBuilder attributeValueBuilder) {}
        public virtual string EndAttributeValue() { return string.Empty; }
        public virtual void BeginEntityValue() {}
        public virtual void EndEntityValue() {}
        public virtual void AddAttribute(string attributeName, string attributeValue, System.Text.Parsing.Span span, string systemId) {}
        public virtual void EndStartTag(System.Text.Parsing.Span span, string systemId) {}
        public virtual void EndTag(string tagName, System.Text.Parsing.Span span, string systemId) {}
        public virtual void EntityRef(string entityName, System.Text.Parsing.Span span, string systemId) {}
        public virtual void ParamEntityRef(string paramEntityRefName, System.Text.Parsing.Span span, string systemId) {}
        public virtual void Text(string text) {}
        public virtual void PI(string target, string instruction) {}
        public virtual void Comment(string comment) {}
        public virtual void GeneralEntity(string entityName, EntityValue entityValue) {}
        public virtual void ParameterEntity(string peName, ParameterEntityValue peValue) {}
        public virtual void RootElementName(string rootElementName) {}
        public virtual void BeginElementTypeDeclaration(string elementName, System.Text.Parsing.Span span, string systemId) {}
        public virtual void EndElementTypeDeclaration(string elementName) {}
    }
}
