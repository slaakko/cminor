using System;
using System.Collections.Generic;
using System.Threading;

void foo()
{
    for (int i = 0; i < 100; ++i)
    {
        byte[] a = new byte[cast<int>(64) * 1024];
    }
}

void threadFun(object i)
{
    Console.WriteLine("begin:" + i.ToString());
    for (int i = 0; i < 10000; ++i)
    {
        if (i % 100 == 0)
        {
            Console.Write(".");
        }
        foo();
    }
    Console.WriteLine("end:" + i.ToString());
}

void main(string[] args)
{
    try
    {    
        int n = 1;
        if (args.Length == 1)
        {
            n = int.Parse(args[0]);
        }
        else if (args.Length != 0)
        {
            Console.WriteLine("usage: threadgc <n>");
        }
        Console.WriteLine("begin:main (" + n.ToString() + ")");
        List<Thread> threads = new List<Thread>();
        for (int i = 0; i < n; ++i)
        {
            threads.Add(Thread.StartFunction(threadFun, i));
        }
        foreach (Thread thread in threads)
        {
            thread.Join();
        }
        Console.WriteLine("end:main");
    }
    catch (Exception ex)
    {
        Console.Error.WriteLine("ex.ToString()");
    }
}
