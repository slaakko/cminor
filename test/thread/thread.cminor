using System;
using System.Collections.Generic;
using System.Threading;

void freeFun()
{
    Console.WriteLine("free fun");
}

void freeFunWithArg(object arg)
{
    Console.WriteLine("free fun with argument: " + arg.ToString());
}

class Foo
{
    public Foo(int x)
    {
        this.x = x;
    }
    public void Method()
    {
        Console.WriteLine("method");
    }
    public void MethodWithArg(object y)
    {
        Console.WriteLine("method " + y.ToString());
    }
    public Thread RunMethodInThread()
    {
        return Thread.StartMethod(Method);
    }
    public Thread RunMethodWithArgInThread()
    {
        return Thread.StartMethod(MethodWithArg, x);
    }
    private int x;
}

void main()
{
    try
    {
        List<Thread> threads = new List<Thread>();
        Thread thread1 = Thread.StartFunction(freeFun);
        threads.Add(thread1);
        Thread thread2 = Thread.StartFunction(freeFunWithArg, 1);
        threads.Add(thread2);
        Foo foo = new Foo(2);
        Thread thread3 = foo.RunMethodInThread();
        threads.Add(thread3);
        Thread thread4 = foo.RunMethodWithArgInThread();
        threads.Add(thread4);
        foreach (Thread thread in threads)
        {
            thread.Join();
        }
    }
    catch (Exception ex)
    {
        Console.Error.WriteLine(ex.ToString());
    }
}
