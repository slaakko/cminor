public interface Enumerator
{
    object Current();
    void Next();
    bool AtEnd();
}

public interface Enumerable
{
    Enumerator GetEnumerator();
}

public void Enumerate(Enumerable enumerable)
{
    Enumerator enumerator = enumerable.GetEnumerator();
    while (!enumerator.AtEnd())
    {
        object current = enumerator.Current();
        enumerator.Next();
    }
}

class Alpha : Enumerable
{
    public Enumerator GetEnumerator()
    {
        return new AlphaEnumerator();
    }
    private class AlphaEnumerator : Enumerator
    {
        public object Current() 
        { 
            return null; 
        }
        public void Next()
        {
        }
        public bool AtEnd() 
        {
            return true;
        }
    }
}

void main()
{
    Alpha a = new Alpha();
    Enumerate(a);
}
